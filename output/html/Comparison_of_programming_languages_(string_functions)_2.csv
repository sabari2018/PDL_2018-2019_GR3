Format,Languages,Base index
string [ i ]," ALGOL 68, ALGOL 68, ALGOL 68, ALGOL 68, ALGOL 68 (ALGOL 68), ALGOL 68 ",1
string [ i ]," C (programming language), C (programming language), C (programming language), C (programming language), C (programming language), C (programming language), C (programming language), C (programming language),C (programming language) C (programming language), C (programming language),C (programming language) C (programming language), C (programming language), Ya, C (programming language) ",0
string { i },PHP (deprecated in 5.3),0
string ( i ),Ada (programming language),≥1
" Mid( string ,i,1) ",Visual Basic,1
" MID$( string ,i,1) ",BASIC,1
string .Chars( i ),Visual Basic .NET,0
string ( i : i ),Fortran,1
string .charAt( i )," Java (programming language), Java (programming language) ",0
string .[ i ]," OCaml, OCaml ",0
string .chars().nth( i ),Rust (programming language)Rust (programming language),0
"  string [ i , 1 ] ",Pick Basic,1
" String.sub ( string ,  i ) ",Standard ML,0
string  !!  i,Haskell (programming language),0
(string-ref  string   i ),Scheme (programming language),0
(char  string   i ),Common Lisp,0
(elt  string   i ),ISLISP,0
(get  string   i ),Clojure,0
" substr( string ,  i , 1) ",Perl 5Perl 5,0
" substr( string ,  i , 1)   string.substr( i , 1) ",Raku (programming language)Raku (programming language),0
" substr( string ,  i , 1) ",PL/I,1
string .at( i ),C++ (STL) (w/ bounds checking),0
" lists:nth( i ,  string ) ",Erlang (programming language),1
[ string  characterAtIndex: i ],Objective-C (NSString * only),0
" string.sub( string ,  i ,  i )   ( string ):sub( i ,  i ) ",Lua (programming language)Lua (programming language),1
string  at:  i,Smalltalk (w/ bounds checking),1
string index  string i,Tcl,0
" StringTake[ string , { i }] "," Mathematica, MathematicaMathematica ",1
string @ i,Eiffel (programming language),1
string  ( i :1),COBOL,1
i ⌷ string,APL (programming language),0 or 1
