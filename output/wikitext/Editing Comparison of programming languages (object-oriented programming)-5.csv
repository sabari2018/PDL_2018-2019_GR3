[ 
, construction
, destruction
],
| code'''data''' variable '''type ref to''' class '''.'''br /'''create object''' variable «'''exporting''' parameter = argument»./code,|!-- I'm not sure if that is the best way to say that. --,
| codevariable'''←⎕NEW''' class «parameters»/code,| code'''⎕EX nowiki'/nowiki'''variable'''nowiki'/nowiki'''/code,
| codeclass variable«'''('''parameters''')'''»''';'''/code orbr /codeclass '''[[Pointer (computer programming)|*]]'''variable '''= [[new (C++)|new]] '''class«'''('''parameters''')'''»''';'''/code,| code'''[[delete (C++)|delete]]''' pointer''';'''/code,
| rowspan=3|codeclass variable '''= new''' class'''('''parameters''');'''/code,| codevariable'''.Dispose();'''/coderef name="gc" /,
|ref name="gc" /,
| code'''destroy('''variable''');'''/code,
| codeclass «instance handle» '''{''' «properties/data members assignments instance method overrides» '''}'''/code,| code'''delete''' instance handle''';'''/code,
| codeclass '''[[Pointer (computer programming)|*]]'''variable '''= nowiki[[/nowiki'''class''' alloc ] init];'''/code or br /codeclass '''[[Pointer (computer programming)|*]]'''variable '''= nowiki[[/nowiki'''class''' alloc ] '''initWithFoo''':'''parameter «bar''':'''parameter ...»'''];'''/code,| code'''['''variable '''release];'''/code,
| code'''let''' variable '''=''' class'''('''parameters''')'''/code,| ,
| codevariable '''=''' class'''('''parameters''')'''/code,| code'''del''' variable/coderef name="gc" / (Normally not needed),
| code'''Dim''' variable '''As New''' class'''('''parameters''')'''/code,| codevariable'''.Dispose()'''/coderef name="gc" /,
| code'''Dim''' variable '''As New''' class'''('''parameters''')'''/code,| codevariable = '''Nil'''/code,
| code'''create''' variable/code orbr /code'''create''' «'''{'''TYPE'''}'''» variable'''.'''make_foo «'''('''parameters''')'''»/code orbr /codevariable ''':= create''' '''{'''TYPE'''}'''/code orbr /codevariable ''':= create {'''TYPE'''}.'''make_foo «'''('''parameters''')'''» /code,|ref name="gc" /,
| code'''[[sigil (computer programming)|$]]'''variable '''= new''' class'''«('''parameters''')»;'''/code,| code'''unset($'''variable''');'''/coderef name="gc" /,
| code«'''my '''»'''$'''variable '''=''' class'''-new'''«'''('''parameters''')'''»''';'''/code,| code'''undef($'''variable''');'''/code,
| code«'''my '''»$variable '''=''' class'''.new'''«'''('''parameters''')'''»''';'''/code,| code$variable'''.undefine;'''/code,
| codevariable '''=''' class'''.new'''«'''('''parameters''')'''»/code,|ref name="gc" /,
| code'''$'''variable '''= New-Object '''«'''-TypeName'''» class ««'''-ArgumentList'''» parameters»/code,| code'''Remove-Variable''' «'''-Name'''» variable/code,
| code'''let''' variable '''= new''' class «parameters»/code or br /code'''let''' variable '''= object''' members '''end'''/code,| rowspan=2|ref name="gc" /,
| code'''let''' variable '''= '''«'''new''' »class'''('''«parameters»''')'''/code,
| The class is an Object.br/Just send a message to a class usually code#new/code or code#new:/code and many others for example:,syntaxhighlight lang="smalltalk",Point x: 10 y: 20.,Array with: -1 with: 3 with: 2.,/syntaxhighlight,|,
| code'''var''' variable '''= new''' class«(parameters)»/code or br /code'''var''' variable '''= {''' «key1''':''' value1«'''''' key2''':''' value2 ...»»'''}'''/code,|ref name="gc" /,
| codeClassVar ''':=''' ClassType.ConstructorName'''('''parameters''')''';/code,| codeClassVar'''.Free;'''/code,
| syntaxhighlight lang="scala",val obj = new Object // no parameters,val obj = new Object(arg0 arg1 arg2...),val obj = Object(arg0 arg1 arg2...) // case class,val obj = new Object(arg0 arg1 param1 = value1 ...) // named parameters,/syntaxhighlight,|ref name="gc" /,
| code'''INVOKE''' class '''"NEW"''' '''RETURNING''' variable/code orbr/code'''MOVE''' class'''::"NEW"''' '''TO''' variable/code,|,
| codevariable «'''as''' class» '''=''' class'''('''parameters''')'''/code,| codevariable'''.dispose'''/code,
| code('''setq''' variable ('''create''' ('''class''' some-class [:field-1 value-1 [:field-2 value-2] ..])))/code,| ref name="gc" /,
,