,read-write,read-only,write-only
ABAP Objects,n/a,,
APL (Dyalog),:Property Bar∇ result ← Getinstructions∇∇ Set argumentsinstructions∇:EndProperty Bar,:Property Bar∇ result ← Getinstructions∇:EndProperty Bar,:Property Bar∇ Set argumentsinstructions∇:EndProperty Bar
C++ (STL),n/a,,
C#,type Bar {  get { instructions ... return value; }  set { instructions } },type Bar { get { instructions ... return value; } },type Bar { set { instructions } }
D,@property type bar() { instructions ... return value; }  @property type bar(type value) { instructions ... return value; },@property type bar() { instructions ... return value; },@property type bar(type value) { instructions ... return value; }
eC,property type Bar {  get { instructions ... return value; }  set { instructions } },property type Bar { get { instructions ... return value; } },property type Bar { set { instructions } }
Java,n/a,,
Objective-C 2.0 (Cocoa),@property (readwrite) type bar;  and then inside @implementation  - (type)bar { instructions }  - (void)setBar:(type)value { instructions },@property (readonly) type bar;  and then inside @implementation  - (type)bar { instructions },n/a
Swift,var bar : type { get { instructions } set«(newBar)» { instructions } },var bar : type { instructions },n/a
Eiffel,feature -- Access x: TYPE assign set_x feature -- Settings  set_x (a_x: like x) do instructions ensure x_set: verification end,,
Python," def setBar(self, value): Tab instructionsdef getBar(self):Tab instructionsTab return valuebar = property(getBar, setBar)",def getBar(self): Tab instructionsTab return valuebar = property(getBar)," def setBar(self, value): Tab instructionsbar = property(fset = setBar)"
Visual Basic .NET,Property Bar() As typeGetinstructionsReturn valueEnd GetSet (ByVal Value As type)instructionsEnd SetEnd Property,ReadOnly Property Bar() As typeGetinstructionsReturn valueEnd GetEnd Property,WriteOnly Property Bar() As typeSet (ByVal Value As type)instructionsEnd SetEnd Property
Xojo,ComputedProperty Bar() As typeGetinstructionsReturn valueEnd GetSet (ByVal Value As type)instructionsEnd SetEnd ComputedProperty,ComputedProperty Bar() As typeGetinstructionsReturn valueEnd GetEnd ComputedProperty,ComputedProperty Bar() As typeSet (value As type)instructionsEnd SetEnd ComputedProperty
PHP," function __get($property) { switch ($property) { case Bar : instructions ... return value; } }function __set($property, $value) { switch ($property) { case Bar : instructions } }",function __get($property) { switch ($property) { case Bar : instructions ... return value; } }," function __set($property, $value) { switch ($property) { case Bar : instructions } }"
Perl,sub Bar {   my $self = shift;   if (my $Bar = shift) {        # setter        $self->{Bar} = $Bar;        return $self;  } else {        # getter        return $self->{Bar};," sub Bar {   my $self = shift;   if (my $Bar = shift) {        # read-only        die ""Bar is read-only\n"";  } else {        # getter        return $self->{Bar};       "," sub Bar {   my $self = shift;   if (my $Bar = shift) {        # setter        $self->{Bar} = $Bar;        return $self;  } else {        # write-only        die ""Bar is write-only\n"";     "
Raku,n/a,,
Ruby,def bar  instructions  expression resulting in return value  end  def bar=(value)  instructions  end,def bar  instructions  expression resulting in return value  end,def bar=(value)  instructions  end
Windows PowerShell,Add-Member «-MemberType »ScriptProperty «-Name »Bar «-Value »{ instructions ... return value } «-SecondValue »{ instructions } -InputObject variable,Add-Member «-MemberType »ScriptProperty «-Name »Bar «-Value »{ instructions ... return value} -InputObject variable,Add-Member «-MemberType »ScriptProperty «-Name »Bar -SecondValue { instructions } -InputObject variable
OCaml,n/a,,
F#,member this.Bar with get() = expression and set(value) = expression,member this.Bar = expression,member this.Bar with set(value) = expression
JavaScript (ES6),get bar(«parameters») { instructions ... return value}set bar(«parameters») { instructions },get bar(«parameters») { instructions ... return value},set bar(«parameters») { instructions }
COBOL,METHOD-ID. GET PROPERTY bar.DATA DIVISION.LINKAGE SECTION.return-var declarationPROCEDURE DIVISION RETURNING return-var. instructions END METHOD.METHOD-ID. SET PROPERTY bar.DATA DIVISION.LINKAGE SECTION.value-var declarationPROCEDURE DIVISION USING value-var. instructions END METHOD.,METHOD-ID. GET PROPERTY bar.DATA DIVISION.LINKAGE SECTION.return-var declarationPROCEDURE DIVISION RETURNING return-var. instructions END METHOD.,METHOD-ID. SET PROPERTY bar.DATA DIVISION.LINKAGE SECTION.value-var declarationPROCEDURE DIVISION USING value-var. instructions END METHOD.
Cobra,pro bar «as type»Tab getTabTab instructionsTabTab return valueTab setTabTab instructions,get bar «as type»Tab instructionsTab return value,set bar «as type»Tab instructions
ISLISP,colspan=3 n/a
