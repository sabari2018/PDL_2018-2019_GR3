,construction,destruction
ABAP Objects,data variable type ref to class .create object variable «exporting parameter = argument».,
APL (Dyalog),variable←⎕NEW class «parameters»,⎕EX variable
STL),class variable«(parameters)»; orclass *variable = new class«(parameters)»;,delete pointer;
C#,class variable = new class(parameters);,variable.Dispose();
Java,,<ref name="gc" />
D,,<code>destroy(variable);</code>
eC," class «instance handle» { «properties/data members assignments, instance method overrides» }",delete instance handle;
Cocoa),class *variable = *variable = class alloc ] initWithFoo:parameter «bar:parameter ...»];,[variable release];
Swift,let variable = class(parameters),
Python,variable = class(parameters),del variable (Normally not needed)
Visual Basic .NET,Dim variable As New class(parameters),variable.Dispose()
Xojo,Dim variable As New class(parameters),variable = Nil
Eiffel,create variable orcreate «{TYPE}» variable.make_foo «(parameters)» orvariable := create {TYPE} orvariable := create {TYPE}.make_foo «(parameters)»,
PHP,$variable = new class«(parameters)»;,unset($variable);
Perl 5,«my »$variable = class->new«(parameters)»;,undef($variable);
Raku,«my »$variable = class.new«(parameters)»;,$variable.undefine;
Ruby,variable = class.new«(parameters)»,
Windows PowerShell,$variable = New-Object «-TypeName» class ««-ArgumentList» parameters»,Remove-Variable «-Name» variable
OCaml,let variable = new class «parameters» or let variable = object members end,
F#,let variable = «new »class(«parameters»),
Smalltalk," The class is an Object.Just send a message to a class, usually #new or #new:, and many others, for example:  Point x: 10 y: 20. Array with: -1 with: 3 with: 2. ",
JavaScript," var variable = new class«(parameters)» or var variable = { «key1: value1«, key2: value2 ...»»}",
Delphi),ClassVar := ClassType.ConstructorName(parameters);,ClassVar.Free;
Scala,"  val obj = new Object // no parameters val obj = new Object(arg0, arg1, arg2...) val obj = Object(arg0, arg1, arg2...) // case class val obj = new Object(arg0, arg1, param1 = value1, ...) // named parameters ",
COBOL," INVOKE class ""NEW"" RETURNING variable orMOVE class::""NEW"" TO variable",
Cobra,variable «as class» = class(parameters),variable.dispose
ISLISP,(setq variable (create (class  [:field-1 value-1 [:field-2 value-2] ..]))),
